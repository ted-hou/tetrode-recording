%% ChannelMapping: Create sessionInfo structs and save to disk

si = { ...
    'daisy14_20220505',   'N/A', 'back', 1300, -4300, -3280; ...
    'daisy14_20220506',   'N/A', 'back', 1300, -4300, -3280; ...
    'daisy15_20220601',   'N/A', 'front', 1300, -4600, -2930; ...
    'daisy16_20220502',   'N/A', 'front', -1300, -4300, -3280; ...
    'daisy17_20230801',   'N/A', 'front', -1300, -4600, -3200; ...
    'daisy17_20230804',   'N/A', 'front', -1700, -4400, -3200; ...
    'daisy18_20230731',   'N/A', 'front', 1600, -4400, -3280; ...
    'daisy18_20230802',   'N/A', 'front', 1300, -4600, -3280; ...
    'desmond23_20220429', 'N/A', 'back', -1300, -4000, -3280; ...
    'desmond23_20220504', 'N/A', 'back', -1300, -4300, -3280; ...
    'desmond24_20220509', 'N/A', 'back', 1300, -4500, -3280; ...
    'desmond24_20220510', 'N/A', 'back', 1300, -4500, -3280; ...
    'desmond25_20220601', 'N/A', 'front', -1300, -4600, -2930; ...
    'desmond26_20220525', 'N/A', 'back', 1300, -4600, -3280; ...
    'desmond26_20220531', 'N/A', 'front', 1300, -4600, -2930; ...
    'desmond27_20220526', 'N/A', 'back', -1300, -4600, -3280; ...
    'desmond27_20220531', 'N/A', 'front', -1300, -4600, -2930; ...
    'desmond28_20230511', 'N/A', 'front', +1300, -4600, -3280; ...
    'desmond28_20230512', 'N/A', 'front', +1300, -4600, -3280; ...
    'desmond28_20230516', 'N/A', 'front', +1300, -4600, -3280; ...
    'desmond28_20230517', 'N/A', 'front', +1300, -4600, -3280; ...
    'desmond28_20230530', 'N/A', 'front', +1300, -4600, -3280; ...
    'desmond29_20230607', 'N/A', 'front', -1600, -4400, -3280; ...
    'desmond29_20230614', 'N/A', 'front', -1300, -4600, -3280; ...
    'desmond30_20230616', 'N/A', 'front', 1600, -4400, -3280; ...
    'desmond31_20230801', 'N/A', 'front', -1300, -4600, -3280; ...
    'desmond31_20230804', 'N/A', 'front', -1700, -4400, -3280; ...
    };

for i = 1:length(si)
    sessionInfo = struct(...
        expName=si{i, 1}, ...
        strain=si{i, 2}, ...
        orientation=si{i, 3}, ...
        ml=si{i, 4}, ...
        dv=si{i, 5}, ...
        ap=si{i, 6});
    save(sprintf('C:\\SERVER\\SpikeSort_DA\\AcuteRecording\\sessionInfo_%s.mat', sessionInfo.expName), 'sessionInfo')

    ar = AcuteRecording(sessionInfo);
    ar.save('ar_DA_', 'C:\SERVER\SpikeSort_DA')
end



%% ChannelMapping: 
ar = AcuteRecording.load('C:\SERVER\SpikeSort_DA\AcuteRecording');
eu = EphysUnit.load('C:\SERVER\Units\acute_DA\DA new');

%% Find location of units from AR
euPos = NaN(length(eu), 3); % ml dv ap
for iEu = 1:length(eu)
    iAr = find(strcmpi(eu(iEu).ExpName, {ar.expName}));
    if ~isempty(iAr)
        euPos(iEu, :) = ar(iAr).getProbeCoords(eu(iEu).Channel);
        c.hasPos(iEu) = true;
    else
        fprintf(1, 'Cannot find AR: %s\n', eu(iEu).ExpName)
    end
end

%% Plot channel map
plot(abs(euPos(:, 1)), euPos(:, 2), 'o')
